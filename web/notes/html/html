HTML BASICS

Objectives:
-Write simple HTML Docs
-Understand differene between closing and self closing tags
-Write tags with attributes
-Use MDN as reference
-given an image, write corresponding HTML

History of HTML
-Created in 1989/1990
-Allowed publishing and exchanging of scientific and technical docs
-Allowed electronic linking of documents via hyperlinks

Use tags to give webpage structure: this is header, this is form, this is link.

General Rule:

<tagName> some content </tagName>

Web Page often contains words. But most contain *styled* text rather than *plain* text. Nowadays, designers have access to hundreds ot different fonts, font sizes, colors, and even alphabets and browsers can, for most part, display them accurately. Webpages may also contain images, video clips, and background music. May include drop-down menus, search boxes, or links. Some even let vistitors customize the page display to accomodate their preference and challenges. Often page contains content boxes that move (scroll) while rest of page is static. 

Typical webpage depends on several technologies(CSS, JavaScript, AJAX, JSON) to control what end-user sees, but most fundamentally, developers write webpages in HTML, without which there would be no webpages. 

To display page on client-side device, browser starts out by reading the HTML.

The W3C (Word Wide Web Consortium) and WHATWG(Web Hypertext Application Technology Working Group) maintains the HTML (HyperText Markup Language) international standarfds and specifications.

WHATWG treats HTML as a constatnly evolging "living standard." W3C works both on HTML Evolution and on "snapshots" of HTML.

HTML Sepcification defines a single language that can be written either with the relaxed HTML syntax or the stricter XML syntax (Extensible Markup Language). HTML also addresse sneeds ot Web apps. HTML only descibes meaning of content, not style and formatting. Use CSS to define appearance and layout. 

HISTORY OF HTML

Created by Tim Berners-Lee at CERN in late 1980s for scientists to share documents over the Internet. Before that, Internet communication had been limited to plain text, using tech like email, FTP(File Transfer Protocol), and Usenet-based discussoin boards.  

HTML used a content model stored on a central server but transferrable to a local workstation and viewable in a browser, simplifying access to content and making "rich" content possible (such as sophisticated text formatting and images). HTML is derived from SGML, which is complex syntax for marking up or bining content (text or graphics) in documents, as of HTML5, HTML no longer attempts to adhere to SGML syntax.

WHAT IS HTML

HTML is a *markup language*. Markup means a language with specific syntax that instructs a web browser how to display a page. HTML separates "content" (words, images, audio, vidueo, and so on) from "presentation" *instructions for diaplying each type of content). HTML uses a pre-defined set of element to define content types. 

Elements contain one ore more "tags" that contain or expression content. Tags are enclosed by angle brackets, and closing tag begins with a forward slash.  

Basic html structure. basic.html

Paragraph element consist fo start tag "<p>" and closing tag "</p>". 

<p>You are beginning to learn HTML</p>

Elements containing content can also contain other elements. The emphasis element "<em>" can be embedded within a paragraph element, to add emphasis to a word or phrase. 

 <p>You are <em>beginning</em> to learn HTML</p>

Some elements cannot contain other element. Image tag "<img>" specifies the filename of the content (an image) as an attribute:

<img src="smileryface.jpg" alt="Smiley face" >

In XHTML (an XML schema that implements HTML elements), you'd often put foot forwrd slash before the final angle bracket to indicate the ending of an empty element. 

Elements -- The Basic Building Blocks

HTML consist of a set of *elements*, which define the *semantic* meaning of their content. Elements include two matching tags and everything in between. 

Some elements have very precide meaning, "this is an image", "this is a heading", "this is an ordered list." 

<html> element surrounds whole document.

<body> element surrounds page content. 

Structure often thought of as a tree wih branches. <body> abd <p> elements growing from trunk <html>. 

Hierarchical structure is called the DOM(document object model).

TAGS

HTML docs written in plain text. 


HTML attaches special meaning to anything that starts with less-than-sign(<) and ends with (>) sign. Such markup is called a tag. Tag must be closed, as some are closed by default whereas others might produce unexpected errors if you forget end tag. 

Start tag and closing tag. Closing tags are same as start tag except with forward slash immediately after the leading less-than sign. Most elements written sing both start and closing tags. 

To write *valid* code, you must properly *nest* start and closing tags, tht is, write close tags in opposite order from the start tags. 

<em>I <strong>really</strong> mean that</em>.

Invalid Code:

<!--Invalid:--> <em>I <strong>really</em> mean that</strong>.

Some elements o not contin any text content or any other elements. These are *empty* elements and need no closing tag. 

<img src="smileyface.jpg" alt="Smiley face" >

Empty elements in XHTML mode are usually closed using a trailing forward slash.

<img src="smileyface.jpg" alt="Smiley face" />

In HTML, this slash has a meaning that is not implemented in Firefox so it should not be sued. Do not closed empty elements in HTML mode. 

ATTRIBUTES

The start tag may contain additional information. Such information is called an *attribute*. Usually consist of 2 parts:
1. An attribute name
2. An attribute value

Few attribute can only have one value. They are *Boolean* attribute and may be shortened by only specifying attribute name or leaving attribute value empty. 

Each of these three mean the same:

<input required="required">

<input required="">

<input required>

Attribute values that consist of a single word or number may be written as they are, but you must enclose values containing spaces in quotation marks (either single (') or double(") quotes) Many always use quotes to avoid mistakes:

<p class=foo bar> <!--(Beware, this probably does not mean what you think it means.)-->

Value is supposed to be "foo bar" but since no code is interpreted as: 
<p class="foo" bar="">

Also XHTML requires that attibures values must always be quoted, even the attributes that require a numeric value.

NAMED CHARACTERS REFERENCE

*Name character references* (often causually called *entities*) are used to print characters that have a special meaning in HTML. For example, HTML interprets the less-than and greater-than symbols as tag delimiters. When you want to display a greater-than symbol in text, can use a named character reference. Should know these 4 common named character references:

&gt; denotes greater-than sign(>)
&lt; denotes less-than sign(<)
&amp; denotes the ampersand(&)
&quot; denotes double quote(")

Many more entities but these four are most important because they represent characters that have special meaning in HTML. 

COMMENTS AND doctype

HTML has mechanism for embedding *comments* that are notdisplayed when page is rendered in a browser. Useful for explaining a section of markup, leaving notes for other people who might work on page and reminder. 

<!-- This is comment text -->

Besides tags, text content, and entities, an HTML doc must contain a *doctype* declaration as first line. The *doctype* declaration is not an HTML tag, but rather tells the browser which version of HTML the page is writtn in. 

In HTML5, only one declaration and written like:
<!DOCTYPE html>

doctype has long and intricate history, but for now, just know that this octype tells browser to interpret HTML and CSS code according to W3C standards and not try to pretend it is Internet Explorer from 90s

Standard HTML Boilerplate

<!DOCTYPE html>
<html>
<head>
<!-- Metadata goes here -->
	<title></title>
</head>
<body>

<!-- Content goes here -->

</body>
</html>

BASIC TAGS

MDN Element Reference!!

10-15 user will use often:

<h1-h6> - headings.

Block level elements - each gets its own line
inline elements - each does not get its own line

<p> - for paragraphs.

<b> - bold

HTML5 - html now must be meaningful. <strong> not <b>

<em> - emphasis or italicize

<ol> - ordered list. Numbered. Must provide with list items.
<ul> - unordered list. Buller points

<li> - list item

Lists can be nested.

DIVS AND SPANS

<div>  - tag is generic container for flow content. Can be used to group elements for styling purposes or because they share attribute values. Block level element

<span> - also generic container. inline container.

ATTRIBUTES

Adding additional information to tags

<tag name="value"></tag>

<img src="corgi.png">
<p class="selected">woof woof</p>
<a href="www.google.com">Click me to go to Google</a>
<link rel="stylesheet" type="text/css" href="style.css">

MDN Attribute Reference

Only handful used often. Most attributes only work on a few elements.

<a> - anchor tag. For creating links to other webpages. 

<a ref="url">Link Text</a>
<a href="www.google.com">Go To Google</a>
//Will search file at first. Must use HTTP://
<a href="page2.html">Go to Page 2</a>

relative path - relative to current directory
absolute path - for exact website


