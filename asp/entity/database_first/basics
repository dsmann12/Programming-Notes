DATA FIRST

First must install Entity

*****

Also must create tables and database. Can use SQL Server and SSMS. 

Then in project, create an ADO.NET ENtity Data Model. Select EF designer from Database. 

Give it server name and data source and select database name. 

Rename connection settings as BlankDbContext. Can install Entity here as well. 

Choose Tables from database. 

Select Pluralize or singularize genreated object names. So sets have plural names and entities have singular name. 

This creates a model. 

USES EDMX DESIGNER

CAn right click, and have layout rearranged, expand all, or show data types in charts. 

ENtity may have issues -> changes Courses to Cours. Must rename. 

Then save so entity will regenerate domain classes. This could break some existing code. 

Navigation Property is property that helps navigate from one entity to another. 

UNCOVERING EDMX

This is essentially a image representation of an XML file. Can open .edmx file with XML text editor to see how it is. 

In <edmx:Runtime>, shows everything about model.
-Storage Models -> representation of the database
-Conceptual Models -> representation of entities
-Mappings -> which is mapping between these two models

Also can right click entity and select mapping to see mapping details. Maps to C# types and domain classes. 

Right click and select Model Browser to see conceptual model of how table is represented. 

CONNECTION STRINGS

Open App.Config or Web.config

In COnnection Strings, stores connection string for connecting to database. 

First has metadata and then data source. Metadata is needed for data first models. THis metadata references the three models generated by the EDMX runtime: .csdl is Conceptual Model, .ssdl is Storage Model, and .msl is Mappings. Think these are .NET Assembly files. 

DEALING WITH DATABASE CHANGES

Adding a New Table

In SSMS, create new table and give it name. Then add columns. 

RIght click on EDMX diagram and select update model from database.

Get window with three options (Add, REfresh, Delete). 

Add shows objects that do not exist in current entity database model, Refresh shows all objects in entity model that will be refreshed when click to finish button. Does adding, refreshing, and deleting. 

Updating a Table

Adding a Column, deleting column, and modifying column

Can get errors saying that new or renamed fields are not mapped. 

Entity sees renamed columns as new columns and not renamed columns. 

Must delete property from conceptual model and rename any referenced manually. 

Entity also doesn't delete columns from conceptual model if deleted from table. Must delete manually from conceptual model (the diagram).

Entity may also not change the mapped type correctly. May retain mapping to Byte when using smallint (so should be short (int16)).

Must manually change mapped type in data model.

Deleting a Table

When updating, Entity knows that table has been deleted and it will be in delete tab. 

Will get errors though because Entity does not delete because some code may rely on the model. 

Will need to manually delete table and referenced. 

Entity will delete it from storage model however. 

IMPORTING STORED PROCEDURES

Has check saying to import stored procedures or functions into entity model. 

Creates functions in conceptual model that can be called to execute those stored procedures. 

These functions will be available in the dbContext. 

Be sure to save refresh in diagram.

FUNCTION IMPORTS

Go back to model, open up MOdel Browser, and Look in Function Imports.

CLick on one to edit function.

Can change name, change what stored procedure it references, or change what it returns.

Can return none, scalars, complex, or entities. 

Complex is a is a data structure that does not support change tracking. So if these data are changed, the changes will not be saved in the database. Simple data structures for returning data from datbase. 

Complex Types can be found in Model Browser. 

Can use entity type instead if complex type is just the same as 

Will need to delete complex types. 

Use Complex Type when doing joins. Or when only want to return a few properties from table with many columns.

To create new complex type:

Click Get Column Information to see table data. Then click Create Neew Complex Type to create new complex type. 

WORKIGN WITH ENUMS

F4 -> view properties of database entity. 

Can create enum with entity data model or can bring one from code or library into model. 

Go to Model Browser. 

Under Conceptual Model, go to Enum Type and add new enum type. Change name, underlying type, and then add the enum values. 

Set Flags attribute lets you create bitwise enums with |. May not need this unless something can be many types at once. 

Then can change type to that enum.

Will get error. Because database wants a varchar or something and type is not an enum.

Change type in database to correlate with underlying type of enum. 

To use existing enum.

Under Enum Types, go back to Create New Enum. Just make name exactly the same as external enum name and use same underlying type. 

Do not create enum fields.

Click reference external type and then give the type name with fully qualified namespace.


